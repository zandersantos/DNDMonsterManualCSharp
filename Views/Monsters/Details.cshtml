@model DungeonsAndDragonsMonsterManualCSharp.Models.Monster

@{
    ViewData["Title"] = "Details";
    var monsterActions = ViewData["MonsterActions"] as List<DungeonsAndDragonsMonsterManualCSharp.Models.Action>;
}

<h1>Details</h1>

<div>
    <h4>Monster</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ArmourClass)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ArmourClass)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.HitPoints)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.HitPoints)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.HitDice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.HitDice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageUrl)
        </dd>
    </dl>
</div>
<div>
    <h4>Actions</h4>
    @if (monsterActions != null && monsterActions.Any())
    {
        <ul>
            @foreach (var action in monsterActions)
            {
                <li>
                    <a asp-controller="Actions" asp-action="Details" asp-route-id="@action.Id">
                        @action.Name
                    </a>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No actions available for this monster.</p>
    }
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
